{"version":3,"sources":["components/Navbar/Navbar.js","components/Weather/Weather.js","components/Functions/Functions.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","className","Weather","country","daily_highchart_options","chart","type","backgroundColor","height","color","title","text","xAxis","categories","yAxis","plotOptions","area","dataLabels","enabled","enableMouseTracking","tooltip","valueSuffix","series","name","data","hourly_highchart_options","state","apidata","timezon","daily_temps","daily_times","hourly_temps","hourly_times","meet","Float32Array","feet","lat","lon","isLoaded","error","this","props","match","params","id1","id2","axios","get","then","response","get_weather_data","result","setState","i","push","Math","round","hourly","temperature","Date","time","toTimeString","slice","Highcharts","$","css","undefined","timezone","html","removeClass","addClass","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","elevation_data","latit","longit","attr","document","body","scrollTop","documentElement","setTimeout","elevations","elevation","meters","hide","removeAttr","feets","window","location","replace","map","L","drawControl","setView","maxZoom","subdomains","addTo","bindPopup","openPopup","message","data-toggle","style","marginLeft","aria-hidden","onClick","get_current_position","href","get_elevation","display","feet_to_meter","meter_to_feet","get_map_location","id","currently","summary","apparentTemperature","visibility","windSpeed","humidity","pressure","dewPoint","fontSize","daily","day","key","indexOf","toDateString","temperatureHigh","temperatureLow","show_daily","show_hourly","Component","App","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3de5dad.chunk.js","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg\">\n        <a className=\"nav navbar-brand\">Weather App</a>\n      </nav>\n    </div>\n  );\n}\n\nexport default withRouter(Navbar);\n","import React, { Component } from 'react'\nimport { get_weather_data, get_elevation_data } from '../Functions/Functions'\nimport Highcharts from 'highcharts';\nimport $ from 'jquery';\nimport * as L from 'leaflet';\n\nclass Weather extends Component {\n  constructor() {\n    super()\n    this.state = {\n      apidata: {},\n      timezon: '',\n      daily_temps: [],\n      daily_times: [],\n      hourly_temps: [],\n      hourly_times: [],\n      meet: Float32Array,\n      feet: Float32Array,\n      lat: Float32Array,\n      lon: Float32Array,\n      isLoaded: false,\n      error: null\n    }\n  }\n  country = ''\n  // For highcharts\n  daily_highchart_options = {\n    chart: {\n      type: 'area',\n      backgroundColor: 'none',\n      height: 250,\n      color: 'white'\n    },\n    title: {\n      text: ''\n    },\n    xAxis: {\n      categories: []\n    },\n    yAxis: {\n      title: {\n        text: \"\"\n      }\n    },\n    plotOptions: {\n      area: {\n        dataLabels: {\n          enabled: true\n        },\n        enableMouseTracking: false\n      }\n    },\n    tooltip: {\n      valueSuffix: \" °C\"\n    },\n    series: [\n      {\n        name: '',\n        data: []\n      }\n    ]\n  };\n  hourly_highchart_options = {\n    chart: {\n      type: 'area',\n      backgroundColor: 'none',\n      height: 250,\n      color: 'white'\n    },\n    title: {\n      text: ''\n    },\n    xAxis: {\n      categories: []\n    },\n    yAxis: {\n      title: {\n        text: \"\"\n      }\n    },\n    plotOptions: {\n      area: {\n        dataLabels: {\n          enabled: true\n        },\n        enableMouseTracking: false\n      }\n    },\n    tooltip: {\n      valueSuffix: \" °C\"\n    },\n    series: [\n      {\n        name: '',\n        data: []\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.state.lat = this.props.match.params.lat;\n    this.state.lon = this.props.match.params.lon;\n    get_weather_data(this.state.lat, this.state.lon)\n      .then(\n        (result) => {\n          this.setState({\n            apidata: result,\n            isLoaded: true,\n          });\n\n          // For hourly and daily highcahrts\n          for (var i = 0; i <= 23; i = i + 3) {\n            this.state.daily_temps.push(Math.round((result.hourly.data[i].temperature - 32) * (5 / 9)));\n            this.state.daily_times.push(new Date(result.hourly.data[i].time * 1000).toTimeString().slice(0, 2));\n          }\n          for (i = 0; i <= 23; i++) {\n            this.state.hourly_temps.push(Math.round((result.hourly.data[i].temperature - 32) * (5 / 9)));\n            this.state.hourly_times.push(new Date(result.hourly.data[i].time * 1000).toTimeString().slice(0, 2));\n          }\n          this.daily_highchart_options.xAxis['categories'] = this.state.daily_times;\n          this.daily_highchart_options.series[0]['data'] = this.state.daily_temps;\n          this.hourly_highchart_options.xAxis['categories'] = this.state.hourly_times;\n          this.hourly_highchart_options.series[0]['data'] = this.state.hourly_temps;\n\n          // For highcharts\n          Highcharts.chart('daily-container', this.daily_highchart_options);\n          Highcharts.chart('hourly-container', this.hourly_highchart_options);\n          $(\".highcharts-yaxis-grid,.highcharts-yaxis-labels,.highcharts-legend-item,.highcharts-credits,.highcharts-axis-line\").css(\"display\", \"none\")\n          $(\".highcharts-text-outline,.highcharts-graph\").css(\"stroke\", \"none\")\n          $(\".highcharts-area\").css(\"fill\", \"#c0c0c087\")\n          $(\".highcharts-point\").css(\"fill\", \"#e2dfdf\")\n          $(\"text\").css(\"fill\", \"white\")\n\n          // Name of country\n          if (this.props.match.params.lat == 31.963158 || this.props.match.params.lat === undefined) {\n            this.country = 'Amman';\n          } else if (this.props.match.params.lat == 29.531919) {\n            this.country = 'Aqaba';\n          } else if (this.props.match.params.lat == 32.551445) {\n            this.country = 'Irbid';\n          } else if (this.props.match.params.lat == 32.332687) {\n            this.country = 'Ajloun';\n          } else if (this.props.match.params.lat == 32.280818) {\n            this.country = 'Jerash';\n          } else if (this.props.match.params.lat == 32.342891) {\n            this.country = 'Al Mafraq';\n          } else {\n            this.country = \"\" + result.timezone + \"\";\n          }\n          $('.name-of-country').html(\"\" + this.country + \"\");\n          $('title').html(\"Weather App | \" + this.country + \"\");\n\n        },\n        (error) => {\n          this.setState({\n            isLoaded: false,\n            error\n          });\n        }\n      )\n\n  }\n\n  // daily and hourly \n  show_daily() {\n    $(\"#daily-container\").css(\"display\", \"block\")\n    $(\"#hourly-container\").css(\"display\", \"none\")\n    $(\".hourly-btn\").removeClass(\" active-summary\");\n    $(\".daily-btn\").addClass(\" active-summary\");\n  }\n\n  show_hourly() {\n    $(\"#daily-container\").css(\"display\", \"none\")\n    $(\"#hourly-container\").css(\"display\", \"block\")\n    $(\".hourly-btn\").addClass(\" active-summary\")\n    $(\".daily-btn\").removeClass(\" active-summary\")\n  }\n\n  // For elevation data\n  get_elevation() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.state.lat = position.coords.latitude;\n      this.state.lon = position.coords.longitude;\n      this.elevation_data(this.state.lat, this.state.lon);\n    }\n    );\n  }\n  elevation_data(latit, longit) {\n    $('.get-elevation-btn').attr({ 'disabled': 'disabled', 'title': 'reload page' });\n    $('.get-elevation-btn').css({ 'cursor': 'not-allowed', 'opacity': '0.5' });\n    $('.load-circle,.loading-data').css('display', 'block');\n    document.body.scrollTop = 1200;\n    document.documentElement.scrollTop = 1200;\n    get_elevation_data(latit, longit)\n      .then(\n        (result) => {\n          setTimeout(() => {\n            $('.load-circle,.loading-data').css('display', 'none');\n            $('.elev-data').css('display', 'block');\n            this.apidata = result;\n            this.state.meet = Math.round(this.apidata.elevations[0].elevation);\n            this.state.feet = ((this.apidata.elevations[0].elevation) * 3.28);\n            $('.altitude-value').html(\"\" + Math.round(this.apidata.elevations[0].elevation) + \" Meter\");\n          }, 2000);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: false,\n            error\n          });\n        }\n      )\n  }\n\n  feet_to_meter() {\n    var meters = this.state.meet;\n    $('.altitude-value').hide();\n    $('.meter-value').removeAttr(\"title\");\n    $('.feet-value').attr(\"title\", \"Click here to feet value.\")\n    $('.feet-or-meter-value').html(\"\" + meters + \" Meter\");\n    $('.meter-value').css('color', 'silver');\n    $('.feet-value').css('color', '#c0c0c087');\n  }\n  meter_to_feet() {\n    var feets = Math.round(this.state.feet);\n    $('.altitude-value').hide();\n    $('.feet-value').removeAttr(\"title\");\n    $('.meter-value').attr(\"title\", \"Click here to meter value.\")\n    $('.feet-or-meter-value').html(\"\" + feets + \" Feet\");\n    $('.feet-value').css('color', 'silver');\n    $('.meter-value').css('color', '#c0c0c087');\n  }\n\n  // For temperature data at user's loaction\n  get_current_position() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.lat = position.coords.latitude;\n      this.lon = position.coords.longitude;\n      window.location.replace(\"/\" + this.lat + \"/\" + this.lon + \"\")\n    }\n    );\n  }\n\n  // For user's location at the map\n  get_map_location() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      this.lat = position.coords.latitude;\n      this.lon = position.coords.longitude;\n      $('.get-map-btn').attr({ 'disabled': 'disabled', 'title': 'reload page' });\n      $('.get-map-btn').css({ 'cursor': 'not-allowed', 'opacity': '0.5' });\n      $('.map-load-circle,.map-loading-data').css('display', 'block');\n      document.body.scrollTop = 2200;\n      document.documentElement.scrollTop = 2200;\n      setTimeout(() => {\n        $('.map-load-circle,.map-loading-data').css('display', 'none');\n        $('#map').css('display', 'block');\n        document.body.scrollTop = 2200;\n        document.documentElement.scrollTop = 2200;\n        var map = L.map('map', { drawControl: true }).setView([this.lat, this.lon], 13);\n        L.tileLayer('https://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {\n          maxZoom: 20,\n          subdomains: ['mt0', 'mt1', 'mt2', 'mt3']\n        }).addTo(map)\n        L.marker([this.lat, this.lon]).bindPopup(\"<b>You are here.\").addTo(map).openPopup();\n      }, 2000);\n    }\n    );\n  }\n\n  render() {\n    const { apidata, error, isLoaded } = this.state;\n    if (error) {\n      return (\n        <div>\n          Error: {error.message}\n        </div>)\n    } else if (!isLoaded) {\n      return (\n        <div className=\"loading-page\" >\n          <h2>Loading...</h2>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"weather-app-contents\">\n          <br />\n\n          <div className=\"dropdown\">\n            <button className=\"dropdown-toggle\" data-toggle=\"dropdown\">\n              <span style={{ marginLeft: '18px' }} className=\"name-of-country\"></span>\n            </button>\n            <i className=\"fa fa-map-marker\" aria-hidden=\"true\" onClick={() => this.get_current_position()}\n              title=\"Get the temperature at your specific location\"></i>\n            <div className=\"dropdown-menu\">\n              <a className=\"dropdown-item\" href=\"/31.963158/35.930359\">Amman</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/29.531919/35.006084\">Aqaba</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/32.551445/35.851479\">Irbid</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/32.332687/35.751785\">Ajloun</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/32.280818/35.899288\">Jerash</a>\n              <div className=\"dropdown-divider\"></div>\n              <a className=\"dropdown-item\" href=\"/32.342891/36.208038\">Al Mafraq</a>\n            </div>\n          </div > <br />\n\n          <div className=\"elevation-and-map\">\n            <div>\n              <button type=\"button\" onClick={() => this.get_elevation()} className=\"get-elevation-btn\">Get your location's\n              elevation\n              </button>\n              <p className=\"load-circle\"></p>\n              <p className=\"loading-data\">Loading...</p>\n              <div className=\"elev-data\" style={{ display: 'none' }}>\n                <div className=\"altitude\" >\n                  <span className=\"your-altitude\">Your location's altitude:</span>\n                  <br /><span className=\"altitude-value\"></span>\n                  <span className=\"feet-or-meter-value\"></span>\n                </div>\n                <div className=\"meter-feet-btns\" >\n                  <span className=\"meter-value\" onClick={() => this.feet_to_meter()}>m</span>\n                  <span title=\"Click here to feet value.\" onClick={() => this.meter_to_feet()} className=\"feet-value\">ft</span>\n                </div >\n              </div>\n            </div >\n            <div>\n              <button type=\"button\" onClick={() => this.get_map_location()} className=\"get-map-btn\">Get your location's at\n                    map</button>\n              <p className=\"map-load-circle\"></p>\n              <p className=\"map-loading-data\">Loading...</p>\n              <div id=\"map\"></div >\n            </div >\n          </div>\n\n          <div className=\"currently-temp\">\n            <div>\n              <span className=\"temp\">{Math.round((apidata.currently.temperature - 32) * (5 / 9))}</span>\n              <span className=\"temp-unit\">&deg;C</span>\n            </div>\n            <div className=\"feels-visibilty\">\n              <span>{apidata.currently.summary}</span><br />\n              <span>Feels Like {Math.round((apidata.currently.apparentTemperature - 32) * (5 / 9))}&deg;</span><br />\n              <span>Visibility {Math.round(apidata.currently.visibility)} mi</span>\n            </div>\n            <div className=\"wind-humidity\">\n              <span>Wind {Math.round(apidata.currently.windSpeed)} mph</span><br />\n              <span>Humidity {apidata.currently.humidity}</span>\n            </div>\n            <div className=\"barometer-dewpoint\">\n              <span>Barometer {Math.round(apidata.currently.pressure)}</span><br />\n              <span>Dew Point {Math.round(apidata.currently.dewPoint)}°</span>\n            </div>\n            <div className=\"weather-summary\" style={{ display: 'none' }}>\n              <span style={{ fontSize: '25px' }}>{apidata.currently.summary}</span><br />\n              <span>{Math.round(apidata.currently.windSpeed)} mph</span><br />\n            </div>\n          </div>\n\n          <div className=\"six-days-temp\" >\n            {(apidata.daily.data).map(day =>\n              <div className=\"day\" key={(apidata.daily.data).indexOf(day)} >\n                {(apidata.daily.data).indexOf(day) <= 5 &&\n                  <div className=\"day-contents\" >\n                    <span className=\"day-name\">{ new Date(day.time * 1000).toDateString().slice(0, 10) }</span><br />\n                    <span>Hum: {day.humidity}</span><br />\n                    <span className=\"day-temp\">{Math.round((day.temperatureHigh - 32) * (5 / 9))}&deg;</span><br />\n                    <span className=\"night-temp\">{Math.round((day.temperatureLow - 32) * (5 / 9))}&deg;</span>\n                  </div>\n                }\n              </div>)}\n          </div>\n\n          <div className=\"daily-hourly-temp\">\n            <div className=\"change-summary\">\n              <button className=\"daily-btn active-summary\" onClick={() => this.show_daily()}>\n                DAILY SUMMARY\n                </button>\n              <button className=\"hourly-btn\" onClick={() => this.show_hourly()}>\n                HOURLY\n                </button>\n            </div>\n            <div className=\"daily-summary\">\n              <div id=\"daily-container\"></div>\n            </div>\n            <div className=\"hourly-summary\">\n              <div id=\"hourly-container\" style={{ display: 'none' }}></div>\n            </div>\n            <div className=\"data-source\">\n              <span>Data from Dark Sky API</span>\n            </div >\n            <br /><br />\n          </div>\n        </div >\n      );\n    }\n  }\n}\n\nexport default Weather;","import axios from 'axios'\n\nexport const get_weather_data = (id1 = 31.963158, id2 = 35.930359) => {\n    return axios\n        .get('http://localhost:4000/weather-data/' + id1 + '/' + id2)\n        .then(response => {\n            return response.data\n        })\n}\n\nexport const get_elevation_data = (id1, id2) => {\n    return axios\n        .get('http://localhost:4000/elevation-data/' + id1 + '/' + id2)\n        .then(response => {\n            return response.data\n        })\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport Weather from './components/Weather/Weather';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Route exact path=\"/\" component={Weather} />\n        <Route exact path=\"/:lat/:lon\" component={Weather} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}